{"remainingRequest":"D:\\桌面\\vdocs-plus\\node_modules\\babel-loader\\lib\\index.js!D:\\桌面\\vdocs-plus\\src\\plugins\\highlightjsLineNumbers\\index.js","dependencies":[{"path":"D:\\桌面\\vdocs-plus\\src\\plugins\\highlightjsLineNumbers\\index.js","mtime":1659875331873},{"path":"D:\\桌面\\vdocs-plus\\babel.config.js","mtime":1658807783766},{"path":"D:\\桌面\\vdocs-plus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1661267353134},{"path":"D:\\桌面\\vdocs-plus\\node_modules\\babel-loader\\lib\\index.js","mtime":1661267356503}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["w","d","TABLE_NAME","LINE_NAME","CODE_BLOCK_NAME","NUMBERS_BLOCK_NAME","NUMBER_LINE_NAME","DATA_ATTR_NAME","BREAK_LINE_REGEXP","hljs","initLineNumbersOnLoad","lineNumbersBlock","lineNumbersValue","addStyles","console","error","isHljsLnCodeDescendant","domElt","curElt","className","indexOf","parentNode","getHljsLnTable","hljsLnDomElt","nodeName","edgeGetSelectedCodeLines","selection","selectionText","toString","tdAnchor","anchorNode","tdFocus","focusNode","firstLineNumber","parseInt","dataset","lineNumber","lastLineNumber","firstLineText","textContent","lastLineText","tmp","slice","lastIndexOf","selectedText","hljsLnTable","i","codeLineSel","format","codeLineElt","querySelector","document","addEventListener","e","window","getSelection","navigator","userAgent","clipboardData","setData","preventDefault","css","createElement","type","innerHTML","getElementsByTagName","appendChild","options","readyState","documentReady","blocks","querySelectorAll","hasOwnProperty","call","isPluginDisabledForBlock","element","classList","contains","async","lineNumbersInternal","value","internalOptions","mapOptions","duplicateMultilineNodes","addLineNumbersBlockFor","inputHtml","lines","getLines","length","trim","pop","singleLine","html","l","startFrom","getSingleLineOption","getStartFromOption","defaultValue","Boolean","isFinite","getAttribute","toNumber","nodes","childNodes","node","child","getLinesCount","duplicateMultilineNode","test","result","lineText","text","split","match","func","setTimeout","args","replace","m","n","undefined","attrName","hasAttribute","str","fallback","number","Number"],"sources":["D:/桌面/vdocs-plus/src/plugins/highlightjsLineNumbers/index.js"],"sourcesContent":["/**\r\n * @Author：雨落\r\n * @Dir：src/plugins/highlightjsLineNumbers\r\n * @Time：2022/8/7 20:13:51\r\n */\r\n(function (w, d) {\r\n    'use strict';\r\n\r\n    var TABLE_NAME = 'hljs-ln',\r\n        LINE_NAME = 'hljs-ln-line',\r\n        CODE_BLOCK_NAME = 'hljs-ln-code',\r\n        NUMBERS_BLOCK_NAME = 'hljs-ln-numbers',\r\n        NUMBER_LINE_NAME = 'hljs-ln-n',\r\n        DATA_ATTR_NAME = 'data-line-number',\r\n        BREAK_LINE_REGEXP = /\\r\\n|\\r|\\n/g;\r\n\r\n\r\n    if (w.hljs) {\r\n        w.hljs.initLineNumbersOnLoad = initLineNumbersOnLoad;\r\n        w.hljs.lineNumbersBlock = lineNumbersBlock;\r\n        w.hljs.lineNumbersValue = lineNumbersValue;\r\n\r\n        addStyles();\r\n    } else {\r\n        w.console.error('highlight.js not detected!');\r\n    }\r\n\r\n    function isHljsLnCodeDescendant(domElt) {\r\n        var curElt = domElt;\r\n        while (curElt) {\r\n            if (curElt.className && curElt.className.indexOf('hljs-ln-code') !== -1) {\r\n                return true;\r\n            }\r\n            curElt = curElt.parentNode;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function getHljsLnTable(hljsLnDomElt) {\r\n        var curElt = hljsLnDomElt;\r\n        while (curElt.nodeName !== 'TABLE') {\r\n            curElt = curElt.parentNode;\r\n        }\r\n        return curElt;\r\n    }\r\n\r\n    // Function to workaround a copy issue with Microsoft Edge.\r\n    // Due to hljs-ln wrapping the lines of code inside a <table> element,\r\n    // itself wrapped inside a <pre> element, window.getSelection().toString()\r\n    // does not contain any line breaks. So we need to get them back using the\r\n    // rendered code in the DOM as reference.\r\n    function edgeGetSelectedCodeLines(selection) {\r\n        // current selected text without line breaks\r\n        var selectionText = selection.toString();\r\n\r\n        // get the <td> element wrapping the first line of selected code\r\n        var tdAnchor = selection.anchorNode;\r\n        while (tdAnchor.nodeName !== 'TD') {\r\n            tdAnchor = tdAnchor.parentNode;\r\n        }\r\n\r\n        // get the <td> element wrapping the last line of selected code\r\n        var tdFocus = selection.focusNode;\r\n        while (tdFocus.nodeName !== 'TD') {\r\n            tdFocus = tdFocus.parentNode;\r\n        }\r\n\r\n        // extract line numbers\r\n        var firstLineNumber = parseInt(tdAnchor.dataset.lineNumber);\r\n        var lastLineNumber = parseInt(tdFocus.dataset.lineNumber);\r\n\r\n        // multi-lines copied case\r\n        if (firstLineNumber != lastLineNumber) {\r\n\r\n            var firstLineText = tdAnchor.textContent;\r\n            var lastLineText = tdFocus.textContent;\r\n\r\n            // if the selection was made backward, swap values\r\n            if (firstLineNumber > lastLineNumber) {\r\n                var tmp = firstLineNumber;\r\n                firstLineNumber = lastLineNumber;\r\n                lastLineNumber = tmp;\r\n                tmp = firstLineText;\r\n                firstLineText = lastLineText;\r\n                lastLineText = tmp;\r\n            }\r\n\r\n            // discard not copied characters in first line\r\n            while (selectionText.indexOf(firstLineText) !== 0) {\r\n                firstLineText = firstLineText.slice(1);\r\n            }\r\n\r\n            // discard not copied characters in last line\r\n            while (selectionText.lastIndexOf(lastLineText) === -1) {\r\n                lastLineText = lastLineText.slice(0, -1);\r\n            }\r\n\r\n            // reconstruct and return the real copied text\r\n            var selectedText = firstLineText;\r\n            var hljsLnTable = getHljsLnTable(tdAnchor);\r\n            for (var i = firstLineNumber + 1 ; i < lastLineNumber ; ++i) {\r\n                var codeLineSel = format('.{0}[{1}=\"{2}\"]', [CODE_BLOCK_NAME, DATA_ATTR_NAME, i]);\r\n                var codeLineElt = hljsLnTable.querySelector(codeLineSel);\r\n                selectedText += '\\n' + codeLineElt.textContent;\r\n            }\r\n            selectedText += '\\n' + lastLineText;\r\n            return selectedText;\r\n            // single copied line case\r\n        } else {\r\n            return selectionText;\r\n        }\r\n    }\r\n\r\n    // ensure consistent code copy/paste behavior across all browsers\r\n    // (see https://github.com/wcoder/highlightjs-line-numbers.js/issues/51)\r\n    document.addEventListener('copy', function(e) {\r\n        // get current selection\r\n        var selection = window.getSelection();\r\n        // override behavior when one wants to copy line of codes\r\n        if (isHljsLnCodeDescendant(selection.anchorNode)) {\r\n            var selectionText;\r\n            // workaround an issue with Microsoft Edge as copied line breaks\r\n            // are removed otherwise from the selection string\r\n            if (window.navigator.userAgent.indexOf('Edge') !== -1) {\r\n                selectionText = edgeGetSelectedCodeLines(selection);\r\n            } else {\r\n                // other browsers can directly use the selection string\r\n                selectionText = selection.toString();\r\n            }\r\n            e.clipboardData.setData('text/plain', selectionText);\r\n            e.preventDefault();\r\n        }\r\n    });\r\n\r\n    function addStyles () {\r\n        var css = d.createElement('style');\r\n        css.type = 'text/css';\r\n        css.innerHTML = format(\r\n            '.{0}{border-collapse:collapse}' +\r\n            '.{0} td{padding:0}' +\r\n            '.{1}:before{content:attr({2})}',\r\n            [\r\n                TABLE_NAME,\r\n                NUMBER_LINE_NAME,\r\n                DATA_ATTR_NAME\r\n            ]);\r\n        d.getElementsByTagName('head')[0].appendChild(css);\r\n    }\r\n\r\n    function initLineNumbersOnLoad (options) {\r\n        if (d.readyState === 'interactive' || d.readyState === 'complete') {\r\n            documentReady(options);\r\n        } else {\r\n            w.addEventListener('DOMContentLoaded', function () {\r\n                documentReady(options);\r\n            });\r\n        }\r\n    }\r\n\r\n    function documentReady (options) {\r\n        try {\r\n            var blocks = d.querySelectorAll('code.hljs,code.nohighlight');\r\n\r\n            for (var i in blocks) {\r\n                if (blocks.hasOwnProperty.call(i)) {\r\n                    if (!isPluginDisabledForBlock(blocks[i])) {\r\n                        lineNumbersBlock(blocks[i], options);\r\n                    }\r\n                }\r\n            }\r\n        } catch (e) {\r\n            w.console.error('LineNumbers error: ', e);\r\n        }\r\n    }\r\n\r\n    function isPluginDisabledForBlock(element) {\r\n        return element.classList.contains('nohljsln');\r\n    }\r\n\r\n    function lineNumbersBlock (element, options) {\r\n        if (typeof element !== 'object') return;\r\n\r\n        async(function () {\r\n            element.innerHTML = lineNumbersInternal(element, options);\r\n        });\r\n    }\r\n\r\n    function lineNumbersValue (value, options) {\r\n        if (typeof value !== 'string') return;\r\n\r\n        var element = document.createElement('code')\r\n        element.innerHTML = value\r\n\r\n        return lineNumbersInternal(element, options);\r\n    }\r\n\r\n    function lineNumbersInternal (element, options) {\r\n\r\n        var internalOptions = mapOptions(element, options);\r\n\r\n        duplicateMultilineNodes(element);\r\n\r\n        return addLineNumbersBlockFor(element.innerHTML, internalOptions);\r\n    }\r\n\r\n    function addLineNumbersBlockFor (inputHtml, options) {\r\n        var lines = getLines(inputHtml);\r\n\r\n        // if last line contains only carriage return remove it\r\n        if (lines[lines.length-1].trim() === '') {\r\n            lines.pop();\r\n        }\r\n\r\n        if (lines.length > 1 || options.singleLine) {\r\n            var html = '';\r\n\r\n            for (var i = 0, l = lines.length; i < l; i++) {\r\n                html += format(\r\n                    '<tr>' +\r\n                    '<td class=\"{0} {1}\" {3}=\"{5}\">' +\r\n                    '<div class=\"{2}\" {3}=\"{5}\"></div>' +\r\n                    '</td>' +\r\n                    '<td class=\"{0} {4}\" {3}=\"{5}\">' +\r\n                    '{6}' +\r\n                    '</td>' +\r\n                    '</tr>',\r\n                    [\r\n                        LINE_NAME,\r\n                        NUMBERS_BLOCK_NAME,\r\n                        NUMBER_LINE_NAME,\r\n                        DATA_ATTR_NAME,\r\n                        CODE_BLOCK_NAME,\r\n                        i + options.startFrom,\r\n                        lines[i].length > 0 ? lines[i] : ' '\r\n                    ]);\r\n            }\r\n\r\n            return format('<table class=\"{0}\">{1}</table>', [ TABLE_NAME, html ]);\r\n        }\r\n\r\n        return inputHtml;\r\n    }\r\n\r\n    /**\r\n     * @param {HTMLElement} element Code block.\r\n     * @param {Object} options External API options.\r\n     * @returns {Object} Internal API options.\r\n     */\r\n    function mapOptions (element, options) {\r\n        options = options || {};\r\n        return {\r\n            singleLine: getSingleLineOption(options),\r\n            startFrom: getStartFromOption(element, options)\r\n        };\r\n    }\r\n\r\n    function getSingleLineOption (options) {\r\n        var defaultValue = false;\r\n        if (new Boolean(options.singleLine)) {\r\n            return options.singleLine;\r\n        }\r\n        return defaultValue;\r\n    }\r\n\r\n    function getStartFromOption (element, options) {\r\n        var defaultValue = 1;\r\n        var startFrom = defaultValue;\r\n\r\n        if (isFinite(options.startFrom)) {\r\n            startFrom = options.startFrom;\r\n        }\r\n\r\n        // can be overridden because local option is priority\r\n        var value = getAttribute(element, 'data-ln-start-from');\r\n        if (value !== null) {\r\n            startFrom = toNumber(value, defaultValue);\r\n        }\r\n\r\n        return startFrom;\r\n    }\r\n\r\n    /**\r\n     * Recursive method for fix multi-line elements implementation in highlight.js\r\n     * Doing deep passage on child nodes.\r\n     * @param {HTMLElement} element\r\n     */\r\n    function duplicateMultilineNodes (element) {\r\n        var nodes = element.childNodes;\r\n        for (var node in nodes) {\r\n            if (nodes.hasOwnProperty.call(node)) {\r\n                var child = nodes[node];\r\n                if (getLinesCount(child.textContent) > 0) {\r\n                    if (child.childNodes.length > 0) {\r\n                        duplicateMultilineNodes(child);\r\n                    } else {\r\n                        duplicateMultilineNode(child.parentNode);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Method for fix multi-line elements implementation in highlight.js\r\n     * @param {HTMLElement} element\r\n     */\r\n    function duplicateMultilineNode (element) {\r\n        var className = element.className;\r\n\r\n        if ( ! /hljs-/.test(className)) return;\r\n\r\n        var lines = getLines(element.innerHTML);\r\n\r\n        for (var i = 0, result = ''; i < lines.length; i++) {\r\n            var lineText = lines[i].length > 0 ? lines[i] : ' ';\r\n            result += format('<span class=\"{0}\">{1}</span>\\n', [ className,  lineText ]);\r\n        }\r\n\r\n        element.innerHTML = result.trim();\r\n    }\r\n\r\n    function getLines (text) {\r\n        if (text.length === 0) return [];\r\n        return text.split(BREAK_LINE_REGEXP);\r\n    }\r\n\r\n    function getLinesCount (text) {\r\n        return (text.trim().match(BREAK_LINE_REGEXP) || []).length;\r\n    }\r\n\r\n    ///\r\n    /// HELPERS\r\n    ///\r\n\r\n    function async (func) {\r\n        w.setTimeout(func, 0);\r\n    }\r\n\r\n    /**\r\n     * {@link https://wcoder.github.io/notes/string-format-for-string-formating-in-javascript}\r\n     * @param {string} format\r\n     * @param {array} args\r\n     */\r\n    function format (format, args) {\r\n        return format.replace(/\\{(\\d+)\\}/g, function(m, n){\r\n            return args[n] !== undefined ? args[n] : m;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {HTMLElement} element Code block.\r\n     * @param {String} attrName Attribute name.\r\n     * @returns {String} Attribute value or empty.\r\n     */\r\n    function getAttribute (element, attrName) {\r\n        return element.hasAttribute(attrName) ? element.getAttribute(attrName) : null;\r\n    }\r\n\r\n    /**\r\n     * @param {String} str Source string.\r\n     * @param {Number} fallback Fallback value.\r\n     * @returns Parsed number or fallback value.\r\n     */\r\n    function toNumber (str, fallback) {\r\n        if (!str) return fallback;\r\n        var number = Number(str);\r\n        return isFinite(number) ? number : fallback;\r\n    }\r\n\r\n}(window, document));"],"mappings":"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"}]}