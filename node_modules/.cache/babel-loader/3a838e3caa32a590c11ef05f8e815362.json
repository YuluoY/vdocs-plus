{"remainingRequest":"D:\\桌面\\vdocs-plus\\node_modules\\babel-loader\\lib\\index.js!D:\\桌面\\vdocs-plus\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\桌面\\vdocs-plus\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\桌面\\vdocs-plus\\src\\ui\\package\\AudioPlayer\\src\\AudioPlayer.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\桌面\\vdocs-plus\\src\\ui\\package\\AudioPlayer\\src\\AudioPlayer.vue","mtime":1660895850160},{"path":"D:\\桌面\\vdocs-plus\\babel.config.js","mtime":1658807783766},{"path":"D:\\桌面\\vdocs-plus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1661267353134},{"path":"D:\\桌面\\vdocs-plus\\node_modules\\babel-loader\\lib\\index.js","mtime":1661267356503},{"path":"D:\\桌面\\vdocs-plus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1661267353134},{"path":"D:\\桌面\\vdocs-plus\\node_modules\\vue-loader\\lib\\index.js","mtime":1661267357130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA;AAEA;EACAA,oBADA;EAEAC;IAAAC;EAAA,CAFA;EAGAC;IACAC;MAAAC;MAAAC;IAAA,CADA;IACA;IACAC;MAAAF;MAAAC;IAAA,CAFA;IAEA;IACAE;MAAAH;MAAAC;IAAA,CAHA;IAGA;IACAG;MAAAJ;MAAAC;QAAA;MAAA;IAAA,CAJA;IAIA;IACAI;MAAAL;MAAAC;QAAA;MAAA;IAAA,CALA;IAMAK;MAAAN;MAAAC;IAAA,CANA;IAOAM;MAAAP;MAAAC;IAAA;EAPA,CAHA;EAYAO,IAZA,kBAYA;IACA;MACAC,aADA;MAEAC,oCAFA;MAGAC,oCAHA;MAIAC,eAJA;MAKAC,eALA;MAMAC,uBANA;MAOAC;IAPA;EASA,CAtBA;EAuBAC;IACA;IACAC,mBAFA,+BAEAC,GAFA,EAEA;MACA;IACA,CAJA;IAKA;IACAC,gBANA,4BAMAC,KANA,EAMAC,IANA,EAMA;MACA;MACA;MACA;IACA,CAVA;IAWAC,cAXA,0BAWAF,KAXA,EAWAF,GAXA,EAWA;MACA;QACAE;MACA;IACA,CAfA;IAiBA;IACAG,cAlBA,4BAkBA;MACA;MACA;MACA;QAAArB;MAAA;MACAsB;IACA,CAvBA;IAwBA;IACAC,gBAzBA,8BAyBA;MACA;IACA,CA3BA;IA4BA;IACAC,QA7BA,oBA6BAC,EA7BA,EA6BA;MACA;MAEA;MACAP;MACA,oBALA,CAMA;;MACA;QAAA;MAAA;QACA;MACA,CAFA,MAEA;QACA;MACA;;MACAQ;IACA,CA1CA;IA2CAC,mBA3CA,+BA2CAF,EA3CA,EA2CA;MACA;MACAG;MACAA;IACA,CA/CA;IAgDA;IACAC,aAjDA,2BAiDA;MAAA;;MACA;;MACA;QACAX;UAAA;QAAA;QACA;QACA;MACA,CAJA,MAIA;QACAA;QACAY;QACA;MACA;IACA,CA5DA;IA6DA;IACAC,gBA9DA,4BA8DAC,KA9DA,EA8DA;MACA;MACA;MACA;MAEA;MACA;MACA;MACAC;MACAf;MACA;IACA,CAzEA;IA0EA;IACAgB,SA3EA,qBA2EAhB,KA3EA,EA2EA;MAAA;;MACAY;MACA;MACA;QACA;UAAA;UACAA;UACA;;UACA;QACA;;QACA;QACA;QACA;QACAG;MACA,CAVA,EAUA,EAVA;IAWA;EAzFA,CAvBA;EAkHAE,OAlHA,qBAkHA;IAAA;;IACA;IAEAT;MACA;;MACA;IACA,CAHA,EAHA,CAQA;;IAEA;IACAR,aAXA,CAWA;;IACAA;MAAA;MACA;;MACA;;MAEAQ;QACA;UACA;UACA;QACA;MACA,CALA,EAKA,GALA;IAMA,CAVA;EAWA;AAzIA","names":["name","components","HSongList","props","isShowSongList","type","default","isShowSongInfo","volume","progressBarColor","songList","defaultSong","isDisabled","data","isPlay","isShowSongListX","isShowSongInfoX","currentSong","durationStr","currentTimeStr","songPercentage","methods","setProgressBarColor","val","setAudioDuration","audio","mode","setAudioVolume","onShrinkPlayer","localStorage","onSwitchSongList","onChange","id","setTimeout","onChangeSongBgStyle","$hUtils","onAudioSwitch","clearInterval","onChangeProgress","event","progressBar","countTime","mounted"],"sourceRoot":"src/ui/package/AudioPlayer/src","sources":["AudioPlayer.vue"],"sourcesContent":["<template>\r\n    <div class=\"h-audio-player\" v-show=\"isDisabled\">\r\n        <div class=\"h-audio-player-wrapper\">\r\n            <div class=\"song-list-wrapper\" v-show=\"isShowSongListX\">\r\n                <h-song-list :songList=\"songList\" @onChange=\"onChange\">\r\n                    <template #audio>\r\n                        <audio ref=\"myAudio\" id=\"h-audio-player\"\r\n                               :src=\"`${currentSong.url}`\"></audio>\r\n                    </template>\r\n                    <template #empty>\r\n                        <div v-if=\"!songList.length\" style=\"text-align: center\">暂无歌曲</div>\r\n                    </template>\r\n                </h-song-list>\r\n            </div>\r\n            <div class=\"player-wrapper\">\r\n                <div class=\"left\" ref=\"left\"\r\n                     :title=\"'当前歌曲：'+currentSong.song\">\r\n                    <div class=\"halt-wrapper\"\r\n                         @click.prevent.self=\"onShrinkPlayer\">\r\n                    <span class=\"halt-icon iconfont icon-zanting\"\r\n                          title=\"播放\" v-show=\"!isPlay\"\r\n                          @click=\"onAudioSwitch\"></span>\r\n                        <span class=\"halt-icon iconfont icon-bofang\"\r\n                              title=\"暂停\" v-show=\"isPlay\"\r\n                              @click=\"onAudioSwitch\"></span>\r\n                    </div>\r\n                    <div class=\"song-img-wrapper\">\r\n                        <img src=\"@/assets/img/main_img.jpg\" class=\"song-img\"/>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right\" v-show=\"isShowSongInfoX\">\r\n                    <div class=\"song-info-wrapper\">\r\n                        <div class=\"song-info\">\r\n                            <div class=\"singer text-ellipse\" :title=\"currentSong.singer\">\r\n                                <span class=\"iconfont icon-renwu-ren\" style=\"margin-right: 10px;\"></span>\r\n                                <span>{{ currentSong.singer }}</span>\r\n                            </div>\r\n                            <div class=\"song text-ellipse\" :title=\"currentSong.song\">\r\n                                <span class=\"iconfont icon-yinle\" style=\"margin-right: 10px;\"></span>\r\n                                <span>{{ currentSong.song }}</span>\r\n                            </div>\r\n                            <div class=\"play-time\">\r\n                                <span><span class=\"iconfont icon-shijian\"></span>\r\n                                    {{ currentTimeStr }}</span>\r\n                                /\r\n                                <span>{{ durationStr }}</span>\r\n                            </div>\r\n                            <div class=\"progress-bar-wrapper\"\r\n                                 :title=\"'播放进度：'+songPercentage\"\r\n                                 @click=\"onChangeProgress\">\r\n                                <span class=\"progress-percentage\">{{ songPercentage }}</span>\r\n                                <span class=\"progress-bar\" ref=\"progressBar\"></span>\r\n                            </div>\r\n                            <div class=\"shrink-icon iconfont icon-xiangzuo1\"\r\n                                 :title=\"`${isShowSongInfoX ? '隐藏' : '打开'}歌曲信息`\"\r\n                                 @click=\"onShrinkPlayer\"></div>\r\n                            <div class=\"song-list-icon iconfont icon-liebiao\"\r\n                                 :title=\"`${isShowSongListX ? '隐藏' : '打开'}歌单列表`\"\r\n                                 @click=\"onSwitchSongList\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import HSongList from \"./SongList\";\r\n\r\n    export default {\r\n        name: \"HAudioPlayer\",\r\n        components: {HSongList},\r\n        props: {\r\n            isShowSongList: {type: Boolean, default: false}, // 是否展开歌单列表\r\n            isShowSongInfo: {type: Boolean, default: true}, // 是否展示歌曲信息\r\n            volume: {type: Number, default: 1}, // 设置音量\r\n            progressBarColor: {type: String, default: () => '#409eff'}, // 设置进度条颜色\r\n            songList: {type: Array, default: () => []},\r\n            defaultSong: {type: Number, default: 5},\r\n            isDisabled: {type: Boolean, default: true}\r\n        },\r\n        data() {\r\n            return {\r\n                isPlay: false,\r\n                isShowSongListX: this.isShowSongList,\r\n                isShowSongInfoX: this.isShowSongInfo,\r\n                currentSong: {},\r\n                durationStr: '',\r\n                currentTimeStr: '00:00',\r\n                songPercentage: '0%'\r\n            }\r\n        },\r\n        methods: {\r\n            // 设置进度条颜色\r\n            setProgressBarColor(val) {\r\n                this.$refs.progressBar.style.backgroundColor = val;\r\n            },\r\n            // 设置歌曲时长\r\n            setAudioDuration(audio, mode) {\r\n                let M = Math.floor(audio[mode] / 60);\r\n                let S = Math.floor(audio[mode] % 60);\r\n                return `${M < 10 ? ('0' + M) : M}:${S < 10 ? ('0' + S) : S}`\r\n            },\r\n            setAudioVolume(audio, val) {\r\n                if (val >= 0 && val <= 1) {\r\n                    audio.volume = val;\r\n                }\r\n            },\r\n\r\n            // 缩小播放器[歌曲信息]\r\n            onShrinkPlayer() {\r\n                this.isShowSongListX && (this.isShowSongListX = !this.isShowSongListX);\r\n                this.isShowSongInfoX = !this.isShowSongInfoX;\r\n                const info = {isShowSongInfo: this.isShowSongInfoX}\r\n                localStorage.setItem('h-audio-player', JSON.stringify(info));\r\n            },\r\n            // 显示/隐藏歌曲列表\r\n            onSwitchSongList() {\r\n                this.isShowSongListX = !this.isShowSongListX;\r\n            },\r\n            // 切换歌曲\r\n            onChange(id) {\r\n                this.onChangeSongBgStyle(id - 1);\r\n\r\n                const audio = document.getElementById('h-audio-player');\r\n                audio.pause();\r\n                this.isPlay = false;\r\n                // 歌曲id不存在时自动播放列表第一个\r\n                if (this.songList.some(item => item.id === id)) {\r\n                    this.currentSong = this.songList[id - 1];\r\n                } else {\r\n                    this.currentSong = this.songList[0];\r\n                }\r\n                setTimeout(this.onAudioSwitch)\r\n            },\r\n            onChangeSongBgStyle(id) {\r\n                // 设置当前正在播放的歌曲样式\r\n                $hUtils.dom.deleteClass($hUtils.dom.findAllByClass('h-active')[0], 'h-active');\r\n                $hUtils.dom.addClass($hUtils.dom.findAllByClass('h-song-item')[id], 'h-active');\r\n            },\r\n            // 暂停/播放切换\r\n            onAudioSwitch() {\r\n                const audio = document.getElementById('h-audio-player');\r\n                if (audio.paused) {\r\n                    audio.play().then(() => this.durationStr = this.setAudioDuration(audio, 'duration'))\r\n                    this.countTime(audio)\r\n                    this.isPlay = true;\r\n                } else {\r\n                    audio.pause();\r\n                    clearInterval(this.timer);\r\n                    this.isPlay = false;\r\n                }\r\n            },\r\n            // 修改播放进度\r\n            onChangeProgress(event) {\r\n                const audio = document.getElementById('h-audio-player');\r\n                const progressBar = document.getElementsByClassName('progress-bar')[0];\r\n                const progressBarWrapper = document.getElementsByClassName('progress-bar-wrapper')[0];\r\n\r\n                const totalWidth = parseInt(getComputedStyle(progressBarWrapper).width);\r\n                const val = (event.offsetX / totalWidth) * 100;\r\n                this.songPercentage = val.toFixed(1) + '%'\r\n                progressBar.style.width = val + '%';\r\n                audio.currentTime = (event.offsetX / totalWidth) * audio.duration;\r\n                this.currentTimeStr = this.setAudioDuration(audio, 'currentTime');\r\n            },\r\n            // 计算当前播放时间\r\n            countTime(audio) {\r\n                clearInterval(this.timer);\r\n                const progressBar = document.getElementsByClassName('progress-bar')[0];\r\n                this.timer = setInterval(() => {\r\n                    if (audio.ended) {  // 音频播放完毕后自动切换下一首\r\n                        clearInterval(this.timer);\r\n                        const totalSongNum = this.songList.length;\r\n                        this.onChange(totalSongNum <= this.currentSong.id ? 1 : this.currentSong.id + 1);\r\n                    }\r\n                    this.currentTimeStr = this.setAudioDuration(audio, 'currentTime');\r\n                    const val = (audio.currentTime / audio.duration) * 100;\r\n                    this.songPercentage = val.toFixed(1) + '%';\r\n                    progressBar.style.width = val + '%';\r\n                }, 10)\r\n            },\r\n        },\r\n        mounted() {\r\n            this.setProgressBarColor(this.progressBarColor);\r\n\r\n            setTimeout(() => {\r\n                this.onChangeSongBgStyle(this.defaultSong)\r\n                this.currentSong = this.songList[this.defaultSong]\r\n            })\r\n\r\n            // setTimeout(() => this.onChange(this.defaultSong + 1))\r\n\r\n            const audio = document.getElementById('h-audio-player');\r\n            audio.load();  // 加载音频\r\n            audio.oncanplay = () => {  // 音频能播放时执行\r\n                this.durationStr = this.setAudioDuration(audio, 'duration');\r\n                this.setAudioVolume(audio, this.volume);\r\n\r\n                setTimeout(() => {\r\n                    if (JSON) {\r\n                        const info = JSON.parse(localStorage.getItem('h-audio-player') || '{}');\r\n                        this.isShowSongInfoX = info.isShowSongInfo;\r\n                    }\r\n                }, 500)\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n  .text-ellipse {\r\n    display: inline-block;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis; // 隐藏超过的文本\r\n    white-space: nowrap; // 不换行\r\n  }\r\n\r\n  .h-audio-player {\r\n    //font-size: 16px;\r\n\r\n    //width: 25em;\r\n    position: fixed;\r\n    left: 0;\r\n    bottom: 1rem;\r\n    background-color: white;\r\n    transition: 1s;\r\n    user-select: none;\r\n    border-top: solid .1px black;\r\n    border-right: solid .1px black;\r\n    border-bottom: solid .1px black;\r\n    z-index: 9999999999999999999;\r\n\r\n    .h-audio-player-wrapper {\r\n      width: 100%;\r\n\r\n      .song-list-wrapper {\r\n        max-height: 15rem;\r\n        overflow-y: auto;\r\n        transition: 1s;\r\n      }\r\n\r\n      .player-wrapper {\r\n        //width: 100%;\r\n        height: 7rem;\r\n        display: flex;\r\n        flex-direction: row;\r\n        position: relative;\r\n        bottom: 0;\r\n\r\n        //#region audio left style\r\n        .left {\r\n          width: 7rem;\r\n          position: relative;\r\n\r\n          .halt-wrapper {\r\n            width: 100%;\r\n            line-height: 7rem;\r\n            position: absolute;\r\n            text-align: center;\r\n            color: white;\r\n\r\n            .halt-icon {\r\n              font-size: 3rem;\r\n              user-select: none;\r\n\r\n              &:hover {\r\n                cursor: pointer;\r\n              }\r\n            }\r\n          }\r\n\r\n          .song-img-wrapper {\r\n            .song-img {\r\n              position: absolute;\r\n              width: 100%;\r\n              height: 100%;\r\n              z-index: -1;\r\n            }\r\n          }\r\n        }\r\n\r\n        //#endregion\r\n\r\n        //#region audio right style\r\n        .right {\r\n          //width: 100%;\r\n          width: 19rem;\r\n          font-size: 14px;\r\n\r\n          .song-info-wrapper {\r\n            position: relative;\r\n\r\n            .song-info {\r\n              width: 100%;\r\n              margin-left: 1rem;\r\n              display: flex;\r\n              flex-direction: column;\r\n\r\n              .singer, .song, .play-time {\r\n                font-size: 1rem;\r\n                width: 90%;\r\n                margin-top: .2rem;\r\n              }\r\n\r\n              .play-time {\r\n                margin-bottom: .3rem;\r\n              }\r\n\r\n              .progress-bar-wrapper {\r\n                //width: 240px;\r\n                width: 12rem;\r\n                height: .8rem;\r\n                border: solid .1px black;\r\n                border-radius: 15px;\r\n                display: flex;\r\n                align-items: center;\r\n                background-color: rgba(0, 0, 0, 0.05);\r\n                position: relative;\r\n\r\n                &:hover {\r\n                  cursor: pointer;\r\n                }\r\n\r\n                .progress-percentage {\r\n                  position: absolute;\r\n                  z-index: 2;\r\n                  width: 100%;\r\n                  text-align: center;\r\n                }\r\n\r\n                .progress-bar {\r\n                  display: inline-block;\r\n                  border-radius: 5px;\r\n                  height: .8rem;\r\n                  position: relative;\r\n\r\n                  &:after {\r\n                    position: absolute;\r\n                    right: -.5rem;\r\n                    top: -.15rem;\r\n                    content: '';\r\n                    width: 1rem;\r\n                    height: 1rem;\r\n                    border-radius: 50%;\r\n                    border: solid .1px black;\r\n                    background-color: #409eff;\r\n                  }\r\n                }\r\n              }\r\n\r\n              .shrink-icon {\r\n                position: absolute;\r\n                right: -5px;\r\n                font-size: 2.5rem;\r\n                color: #409eff;\r\n                bottom: 0;\r\n                z-index: 999;\r\n\r\n                &:hover {\r\n                  cursor: pointer;\r\n                }\r\n              }\r\n\r\n              .song-list-icon {\r\n                position: absolute;\r\n                right: 5px;\r\n                top: .3rem;\r\n                font-size: 1.2rem;\r\n                color: #409eff;\r\n\r\n                &:hover {\r\n                  cursor: pointer;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        //#endregion\r\n      }\r\n    }\r\n  }\r\n</style>"]}]}