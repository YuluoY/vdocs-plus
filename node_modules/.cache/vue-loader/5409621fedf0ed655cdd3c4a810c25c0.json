{"remainingRequest":"D:\\桌面\\vdocs-plus\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\桌面\\vdocs-plus\\src\\ui\\package\\AudioPlayer\\src\\AudioPlayer.vue?vue&type=style&index=0&id=4f5c0789&scoped=true&lang=scss&","dependencies":[{"path":"D:\\桌面\\vdocs-plus\\src\\ui\\package\\AudioPlayer\\src\\AudioPlayer.vue","mtime":1660895850160},{"path":"D:\\桌面\\vdocs-plus\\node_modules\\css-loader\\dist\\cjs.js","mtime":1661267354466},{"path":"D:\\桌面\\vdocs-plus\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1661267358739},{"path":"D:\\桌面\\vdocs-plus\\node_modules\\postcss-loader\\src\\index.js","mtime":1661267356452},{"path":"D:\\桌面\\vdocs-plus\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1661267353103},{"path":"D:\\桌面\\vdocs-plus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1661267353134},{"path":"D:\\桌面\\vdocs-plus\\node_modules\\vue-loader\\lib\\index.js","mtime":1661267357130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudGV4dC1lbGxpcHNlIHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsgLy8g6ZqQ6JeP6LaF6L+H55qE5paH5pysCiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsgLy8g5LiN5o2i6KGMCn0KCi5oLWF1ZGlvLXBsYXllciB7CiAgLy9mb250LXNpemU6IDE2cHg7CgogIC8vd2lkdGg6IDI1ZW07CiAgcG9zaXRpb246IGZpeGVkOwogIGxlZnQ6IDA7CiAgYm90dG9tOiAxcmVtOwogIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOwogIHRyYW5zaXRpb246IDFzOwogIHVzZXItc2VsZWN0OiBub25lOwogIGJvcmRlci10b3A6IHNvbGlkIC4xcHggYmxhY2s7CiAgYm9yZGVyLXJpZ2h0OiBzb2xpZCAuMXB4IGJsYWNrOwogIGJvcmRlci1ib3R0b206IHNvbGlkIC4xcHggYmxhY2s7CiAgei1pbmRleDogOTk5OTk5OTk5OTk5OTk5OTk5OTsKCiAgLmgtYXVkaW8tcGxheWVyLXdyYXBwZXIgewogICAgd2lkdGg6IDEwMCU7CgogICAgLnNvbmctbGlzdC13cmFwcGVyIHsKICAgICAgbWF4LWhlaWdodDogMTVyZW07CiAgICAgIG92ZXJmbG93LXk6IGF1dG87CiAgICAgIHRyYW5zaXRpb246IDFzOwogICAgfQoKICAgIC5wbGF5ZXItd3JhcHBlciB7CiAgICAgIC8vd2lkdGg6IDEwMCU7CiAgICAgIGhlaWdodDogN3JlbTsKICAgICAgZGlzcGxheTogZmxleDsKICAgICAgZmxleC1kaXJlY3Rpb246IHJvdzsKICAgICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgICBib3R0b206IDA7CgogICAgICAvLyNyZWdpb24gYXVkaW8gbGVmdCBzdHlsZQogICAgICAubGVmdCB7CiAgICAgICAgd2lkdGg6IDdyZW07CiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOwoKICAgICAgICAuaGFsdC13cmFwcGVyIHsKICAgICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgICAgbGluZS1oZWlnaHQ6IDdyZW07CiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgICAgICBjb2xvcjogd2hpdGU7CgogICAgICAgICAgLmhhbHQtaWNvbiB7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogM3JlbTsKICAgICAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7CgogICAgICAgICAgICAmOmhvdmVyIHsKICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIC5zb25nLWltZy13cmFwcGVyIHsKICAgICAgICAgIC5zb25nLWltZyB7CiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgICAgICAgd2lkdGg6IDEwMCU7CiAgICAgICAgICAgIGhlaWdodDogMTAwJTsKICAgICAgICAgICAgei1pbmRleDogLTE7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICAvLyNlbmRyZWdpb24KCiAgICAgIC8vI3JlZ2lvbiBhdWRpbyByaWdodCBzdHlsZQogICAgICAucmlnaHQgewogICAgICAgIC8vd2lkdGg6IDEwMCU7CiAgICAgICAgd2lkdGg6IDE5cmVtOwogICAgICAgIGZvbnQtc2l6ZTogMTRweDsKCiAgICAgICAgLnNvbmctaW5mby13cmFwcGVyIHsKICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKCiAgICAgICAgICAuc29uZy1pbmZvIHsKICAgICAgICAgICAgd2lkdGg6IDEwMCU7CiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxcmVtOwogICAgICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwoKICAgICAgICAgICAgLnNpbmdlciwgLnNvbmcsIC5wbGF5LXRpbWUgewogICAgICAgICAgICAgIGZvbnQtc2l6ZTogMXJlbTsKICAgICAgICAgICAgICB3aWR0aDogOTAlOwogICAgICAgICAgICAgIG1hcmdpbi10b3A6IC4ycmVtOwogICAgICAgICAgICB9CgogICAgICAgICAgICAucGxheS10aW1lIHsKICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAuM3JlbTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLnByb2dyZXNzLWJhci13cmFwcGVyIHsKICAgICAgICAgICAgICAvL3dpZHRoOiAyNDBweDsKICAgICAgICAgICAgICB3aWR0aDogMTJyZW07CiAgICAgICAgICAgICAgaGVpZ2h0OiAuOHJlbTsKICAgICAgICAgICAgICBib3JkZXI6IHNvbGlkIC4xcHggYmxhY2s7CiAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTVweDsKICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjA1KTsKICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CgogICAgICAgICAgICAgICY6aG92ZXIgewogICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgLnByb2dyZXNzLXBlcmNlbnRhZ2UgewogICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOwogICAgICAgICAgICAgICAgei1pbmRleDogMjsKICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgLnByb2dyZXNzLWJhciB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IC44cmVtOwogICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOwoKICAgICAgICAgICAgICAgICY6YWZ0ZXIgewogICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgICAgICAgICAgICAgIHJpZ2h0OiAtLjVyZW07CiAgICAgICAgICAgICAgICAgIHRvcDogLS4xNXJlbTsKICAgICAgICAgICAgICAgICAgY29udGVudDogJyc7CiAgICAgICAgICAgICAgICAgIHdpZHRoOiAxcmVtOwogICAgICAgICAgICAgICAgICBoZWlnaHQ6IDFyZW07CiAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTsKICAgICAgICAgICAgICAgICAgYm9yZGVyOiBzb2xpZCAuMXB4IGJsYWNrOwogICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDA5ZWZmOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgLnNocmluay1pY29uIHsKICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgICAgICAgICAgcmlnaHQ6IC01cHg7CiAgICAgICAgICAgICAgZm9udC1zaXplOiAyLjVyZW07CiAgICAgICAgICAgICAgY29sb3I6ICM0MDllZmY7CiAgICAgICAgICAgICAgYm90dG9tOiAwOwogICAgICAgICAgICAgIHotaW5kZXg6IDk5OTsKCiAgICAgICAgICAgICAgJjpob3ZlciB7CiAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICAuc29uZy1saXN0LWljb24gewogICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgICAgICAgICByaWdodDogNXB4OwogICAgICAgICAgICAgIHRvcDogLjNyZW07CiAgICAgICAgICAgICAgZm9udC1zaXplOiAxLjJyZW07CiAgICAgICAgICAgICAgY29sb3I6ICM0MDllZmY7CgogICAgICAgICAgICAgICY6aG92ZXIgewogICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKICAgICAgLy8jZW5kcmVnaW9uCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["AudioPlayer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"AudioPlayer.vue","sourceRoot":"src/ui/package/AudioPlayer/src","sourcesContent":["<template>\r\n    <div class=\"h-audio-player\" v-show=\"isDisabled\">\r\n        <div class=\"h-audio-player-wrapper\">\r\n            <div class=\"song-list-wrapper\" v-show=\"isShowSongListX\">\r\n                <h-song-list :songList=\"songList\" @onChange=\"onChange\">\r\n                    <template #audio>\r\n                        <audio ref=\"myAudio\" id=\"h-audio-player\"\r\n                               :src=\"`${currentSong.url}`\"></audio>\r\n                    </template>\r\n                    <template #empty>\r\n                        <div v-if=\"!songList.length\" style=\"text-align: center\">暂无歌曲</div>\r\n                    </template>\r\n                </h-song-list>\r\n            </div>\r\n            <div class=\"player-wrapper\">\r\n                <div class=\"left\" ref=\"left\"\r\n                     :title=\"'当前歌曲：'+currentSong.song\">\r\n                    <div class=\"halt-wrapper\"\r\n                         @click.prevent.self=\"onShrinkPlayer\">\r\n                    <span class=\"halt-icon iconfont icon-zanting\"\r\n                          title=\"播放\" v-show=\"!isPlay\"\r\n                          @click=\"onAudioSwitch\"></span>\r\n                        <span class=\"halt-icon iconfont icon-bofang\"\r\n                              title=\"暂停\" v-show=\"isPlay\"\r\n                              @click=\"onAudioSwitch\"></span>\r\n                    </div>\r\n                    <div class=\"song-img-wrapper\">\r\n                        <img src=\"@/assets/img/main_img.jpg\" class=\"song-img\"/>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right\" v-show=\"isShowSongInfoX\">\r\n                    <div class=\"song-info-wrapper\">\r\n                        <div class=\"song-info\">\r\n                            <div class=\"singer text-ellipse\" :title=\"currentSong.singer\">\r\n                                <span class=\"iconfont icon-renwu-ren\" style=\"margin-right: 10px;\"></span>\r\n                                <span>{{ currentSong.singer }}</span>\r\n                            </div>\r\n                            <div class=\"song text-ellipse\" :title=\"currentSong.song\">\r\n                                <span class=\"iconfont icon-yinle\" style=\"margin-right: 10px;\"></span>\r\n                                <span>{{ currentSong.song }}</span>\r\n                            </div>\r\n                            <div class=\"play-time\">\r\n                                <span><span class=\"iconfont icon-shijian\"></span>\r\n                                    {{ currentTimeStr }}</span>\r\n                                /\r\n                                <span>{{ durationStr }}</span>\r\n                            </div>\r\n                            <div class=\"progress-bar-wrapper\"\r\n                                 :title=\"'播放进度：'+songPercentage\"\r\n                                 @click=\"onChangeProgress\">\r\n                                <span class=\"progress-percentage\">{{ songPercentage }}</span>\r\n                                <span class=\"progress-bar\" ref=\"progressBar\"></span>\r\n                            </div>\r\n                            <div class=\"shrink-icon iconfont icon-xiangzuo1\"\r\n                                 :title=\"`${isShowSongInfoX ? '隐藏' : '打开'}歌曲信息`\"\r\n                                 @click=\"onShrinkPlayer\"></div>\r\n                            <div class=\"song-list-icon iconfont icon-liebiao\"\r\n                                 :title=\"`${isShowSongListX ? '隐藏' : '打开'}歌单列表`\"\r\n                                 @click=\"onSwitchSongList\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import HSongList from \"./SongList\";\r\n\r\n    export default {\r\n        name: \"HAudioPlayer\",\r\n        components: {HSongList},\r\n        props: {\r\n            isShowSongList: {type: Boolean, default: false}, // 是否展开歌单列表\r\n            isShowSongInfo: {type: Boolean, default: true}, // 是否展示歌曲信息\r\n            volume: {type: Number, default: 1}, // 设置音量\r\n            progressBarColor: {type: String, default: () => '#409eff'}, // 设置进度条颜色\r\n            songList: {type: Array, default: () => []},\r\n            defaultSong: {type: Number, default: 5},\r\n            isDisabled: {type: Boolean, default: true}\r\n        },\r\n        data() {\r\n            return {\r\n                isPlay: false,\r\n                isShowSongListX: this.isShowSongList,\r\n                isShowSongInfoX: this.isShowSongInfo,\r\n                currentSong: {},\r\n                durationStr: '',\r\n                currentTimeStr: '00:00',\r\n                songPercentage: '0%'\r\n            }\r\n        },\r\n        methods: {\r\n            // 设置进度条颜色\r\n            setProgressBarColor(val) {\r\n                this.$refs.progressBar.style.backgroundColor = val;\r\n            },\r\n            // 设置歌曲时长\r\n            setAudioDuration(audio, mode) {\r\n                let M = Math.floor(audio[mode] / 60);\r\n                let S = Math.floor(audio[mode] % 60);\r\n                return `${M < 10 ? ('0' + M) : M}:${S < 10 ? ('0' + S) : S}`\r\n            },\r\n            setAudioVolume(audio, val) {\r\n                if (val >= 0 && val <= 1) {\r\n                    audio.volume = val;\r\n                }\r\n            },\r\n\r\n            // 缩小播放器[歌曲信息]\r\n            onShrinkPlayer() {\r\n                this.isShowSongListX && (this.isShowSongListX = !this.isShowSongListX);\r\n                this.isShowSongInfoX = !this.isShowSongInfoX;\r\n                const info = {isShowSongInfo: this.isShowSongInfoX}\r\n                localStorage.setItem('h-audio-player', JSON.stringify(info));\r\n            },\r\n            // 显示/隐藏歌曲列表\r\n            onSwitchSongList() {\r\n                this.isShowSongListX = !this.isShowSongListX;\r\n            },\r\n            // 切换歌曲\r\n            onChange(id) {\r\n                this.onChangeSongBgStyle(id - 1);\r\n\r\n                const audio = document.getElementById('h-audio-player');\r\n                audio.pause();\r\n                this.isPlay = false;\r\n                // 歌曲id不存在时自动播放列表第一个\r\n                if (this.songList.some(item => item.id === id)) {\r\n                    this.currentSong = this.songList[id - 1];\r\n                } else {\r\n                    this.currentSong = this.songList[0];\r\n                }\r\n                setTimeout(this.onAudioSwitch)\r\n            },\r\n            onChangeSongBgStyle(id) {\r\n                // 设置当前正在播放的歌曲样式\r\n                $hUtils.dom.deleteClass($hUtils.dom.findAllByClass('h-active')[0], 'h-active');\r\n                $hUtils.dom.addClass($hUtils.dom.findAllByClass('h-song-item')[id], 'h-active');\r\n            },\r\n            // 暂停/播放切换\r\n            onAudioSwitch() {\r\n                const audio = document.getElementById('h-audio-player');\r\n                if (audio.paused) {\r\n                    audio.play().then(() => this.durationStr = this.setAudioDuration(audio, 'duration'))\r\n                    this.countTime(audio)\r\n                    this.isPlay = true;\r\n                } else {\r\n                    audio.pause();\r\n                    clearInterval(this.timer);\r\n                    this.isPlay = false;\r\n                }\r\n            },\r\n            // 修改播放进度\r\n            onChangeProgress(event) {\r\n                const audio = document.getElementById('h-audio-player');\r\n                const progressBar = document.getElementsByClassName('progress-bar')[0];\r\n                const progressBarWrapper = document.getElementsByClassName('progress-bar-wrapper')[0];\r\n\r\n                const totalWidth = parseInt(getComputedStyle(progressBarWrapper).width);\r\n                const val = (event.offsetX / totalWidth) * 100;\r\n                this.songPercentage = val.toFixed(1) + '%'\r\n                progressBar.style.width = val + '%';\r\n                audio.currentTime = (event.offsetX / totalWidth) * audio.duration;\r\n                this.currentTimeStr = this.setAudioDuration(audio, 'currentTime');\r\n            },\r\n            // 计算当前播放时间\r\n            countTime(audio) {\r\n                clearInterval(this.timer);\r\n                const progressBar = document.getElementsByClassName('progress-bar')[0];\r\n                this.timer = setInterval(() => {\r\n                    if (audio.ended) {  // 音频播放完毕后自动切换下一首\r\n                        clearInterval(this.timer);\r\n                        const totalSongNum = this.songList.length;\r\n                        this.onChange(totalSongNum <= this.currentSong.id ? 1 : this.currentSong.id + 1);\r\n                    }\r\n                    this.currentTimeStr = this.setAudioDuration(audio, 'currentTime');\r\n                    const val = (audio.currentTime / audio.duration) * 100;\r\n                    this.songPercentage = val.toFixed(1) + '%';\r\n                    progressBar.style.width = val + '%';\r\n                }, 10)\r\n            },\r\n        },\r\n        mounted() {\r\n            this.setProgressBarColor(this.progressBarColor);\r\n\r\n            setTimeout(() => {\r\n                this.onChangeSongBgStyle(this.defaultSong)\r\n                this.currentSong = this.songList[this.defaultSong]\r\n            })\r\n\r\n            // setTimeout(() => this.onChange(this.defaultSong + 1))\r\n\r\n            const audio = document.getElementById('h-audio-player');\r\n            audio.load();  // 加载音频\r\n            audio.oncanplay = () => {  // 音频能播放时执行\r\n                this.durationStr = this.setAudioDuration(audio, 'duration');\r\n                this.setAudioVolume(audio, this.volume);\r\n\r\n                setTimeout(() => {\r\n                    if (JSON) {\r\n                        const info = JSON.parse(localStorage.getItem('h-audio-player') || '{}');\r\n                        this.isShowSongInfoX = info.isShowSongInfo;\r\n                    }\r\n                }, 500)\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n  .text-ellipse {\r\n    display: inline-block;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis; // 隐藏超过的文本\r\n    white-space: nowrap; // 不换行\r\n  }\r\n\r\n  .h-audio-player {\r\n    //font-size: 16px;\r\n\r\n    //width: 25em;\r\n    position: fixed;\r\n    left: 0;\r\n    bottom: 1rem;\r\n    background-color: white;\r\n    transition: 1s;\r\n    user-select: none;\r\n    border-top: solid .1px black;\r\n    border-right: solid .1px black;\r\n    border-bottom: solid .1px black;\r\n    z-index: 9999999999999999999;\r\n\r\n    .h-audio-player-wrapper {\r\n      width: 100%;\r\n\r\n      .song-list-wrapper {\r\n        max-height: 15rem;\r\n        overflow-y: auto;\r\n        transition: 1s;\r\n      }\r\n\r\n      .player-wrapper {\r\n        //width: 100%;\r\n        height: 7rem;\r\n        display: flex;\r\n        flex-direction: row;\r\n        position: relative;\r\n        bottom: 0;\r\n\r\n        //#region audio left style\r\n        .left {\r\n          width: 7rem;\r\n          position: relative;\r\n\r\n          .halt-wrapper {\r\n            width: 100%;\r\n            line-height: 7rem;\r\n            position: absolute;\r\n            text-align: center;\r\n            color: white;\r\n\r\n            .halt-icon {\r\n              font-size: 3rem;\r\n              user-select: none;\r\n\r\n              &:hover {\r\n                cursor: pointer;\r\n              }\r\n            }\r\n          }\r\n\r\n          .song-img-wrapper {\r\n            .song-img {\r\n              position: absolute;\r\n              width: 100%;\r\n              height: 100%;\r\n              z-index: -1;\r\n            }\r\n          }\r\n        }\r\n\r\n        //#endregion\r\n\r\n        //#region audio right style\r\n        .right {\r\n          //width: 100%;\r\n          width: 19rem;\r\n          font-size: 14px;\r\n\r\n          .song-info-wrapper {\r\n            position: relative;\r\n\r\n            .song-info {\r\n              width: 100%;\r\n              margin-left: 1rem;\r\n              display: flex;\r\n              flex-direction: column;\r\n\r\n              .singer, .song, .play-time {\r\n                font-size: 1rem;\r\n                width: 90%;\r\n                margin-top: .2rem;\r\n              }\r\n\r\n              .play-time {\r\n                margin-bottom: .3rem;\r\n              }\r\n\r\n              .progress-bar-wrapper {\r\n                //width: 240px;\r\n                width: 12rem;\r\n                height: .8rem;\r\n                border: solid .1px black;\r\n                border-radius: 15px;\r\n                display: flex;\r\n                align-items: center;\r\n                background-color: rgba(0, 0, 0, 0.05);\r\n                position: relative;\r\n\r\n                &:hover {\r\n                  cursor: pointer;\r\n                }\r\n\r\n                .progress-percentage {\r\n                  position: absolute;\r\n                  z-index: 2;\r\n                  width: 100%;\r\n                  text-align: center;\r\n                }\r\n\r\n                .progress-bar {\r\n                  display: inline-block;\r\n                  border-radius: 5px;\r\n                  height: .8rem;\r\n                  position: relative;\r\n\r\n                  &:after {\r\n                    position: absolute;\r\n                    right: -.5rem;\r\n                    top: -.15rem;\r\n                    content: '';\r\n                    width: 1rem;\r\n                    height: 1rem;\r\n                    border-radius: 50%;\r\n                    border: solid .1px black;\r\n                    background-color: #409eff;\r\n                  }\r\n                }\r\n              }\r\n\r\n              .shrink-icon {\r\n                position: absolute;\r\n                right: -5px;\r\n                font-size: 2.5rem;\r\n                color: #409eff;\r\n                bottom: 0;\r\n                z-index: 999;\r\n\r\n                &:hover {\r\n                  cursor: pointer;\r\n                }\r\n              }\r\n\r\n              .song-list-icon {\r\n                position: absolute;\r\n                right: 5px;\r\n                top: .3rem;\r\n                font-size: 1.2rem;\r\n                color: #409eff;\r\n\r\n                &:hover {\r\n                  cursor: pointer;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        //#endregion\r\n      }\r\n    }\r\n  }\r\n</style>"]}]}