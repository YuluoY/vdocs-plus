{"remainingRequest":"D:\\桌面\\vdocs-plus\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\桌面\\vdocs-plus\\src\\components\\comment\\h-comment.vue?vue&type=style&index=0&id=46b9fd6a&scoped=true&lang=css&","dependencies":[{"path":"D:\\桌面\\vdocs-plus\\src\\components\\comment\\h-comment.vue","mtime":1660971313631},{"path":"D:\\桌面\\vdocs-plus\\node_modules\\css-loader\\dist\\cjs.js","mtime":1661267354466},{"path":"D:\\桌面\\vdocs-plus\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1661267358739},{"path":"D:\\桌面\\vdocs-plus\\node_modules\\postcss-loader\\src\\index.js","mtime":1661267356452},{"path":"D:\\桌面\\vdocs-plus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1661267353134},{"path":"D:\\桌面\\vdocs-plus\\node_modules\\vue-loader\\lib\\index.js","mtime":1661267357130}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5oLWNvbW1lbnQtd3JhcHBlciB7CiAgICBkaXNwbGF5OiBmbGV4Owp9CgouY29tbWVudC10aXRsZSB7CiAgICB3aWR0aDogODAlOwogICAgbWFyZ2luOiAwIGF1dG87CiAgICBmb250LXNpemU6IDEuOGVtOwogICAgZm9udC13ZWlnaHQ6IGJvbGRlcjsKICAgIGxldHRlci1zcGFjaW5nOiA1cHg7CiAgICBjb2xvcjogIzM0NDk1RTsKICAgIHRyYW5zaXRpb246IC43czsKICAgIHBhZGRpbmc6IDEwcHggMTVweDsKICAgIGJvcmRlci1yYWRpdXM6IDVweDsKICAgIGN1cnNvcjogcG9pbnRlcjsKfQoKLmNvbW1lbnQtdGl0bGU6YWN0aXZlIHsKICAgIHRyYW5zZm9ybTogcm90YXRlWCgzNjBkZWcpOwogICAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDA5ZWZmOwp9Cgo="},{"version":3,"sources":["h-comment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8FA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"h-comment.vue","sourceRoot":"src/components/comment","sourcesContent":["<template>\r\n    <div class=\"h-comment-wrapper\"\r\n         :style=\"`flex-direction: ${isReverse ? 'column-reverse' : 'column'}`\">\r\n        <h-comment-area v-if=\"isReplyState\" :isReplyState=\"isReplyState\"></h-comment-area>\r\n        <div class=\"comment-title\" v-if=\"!isReverse\">{{ title }}</div>\r\n        <h-comment-display :comments=\"$store.getters['comment/getCommentsByPath']\"\r\n                           :isReplyState=\"isReplyState\"\r\n                           :states=\"states\"\r\n                           :idToName=\"idToName\"\r\n                           :onReplyStateChange=\"onReplyStateChange\"></h-comment-display>\r\n        <div class=\"comment-title\" v-if=\"isReverse\">{{ title }}</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import HCommentDisplay from \"@/components/comment/h-comment-display\";\r\n    import HCommentArea from \"@/components/comment/h-comment-area\";\r\n\r\n\r\n    export default {\r\n        name: \"HComment\",\r\n        components: {HCommentArea, HCommentDisplay},\r\n        props: {\r\n            isReverse: {type: Boolean, default: false}\r\n        },\r\n        data() {\r\n            return {\r\n                isReplyState: true,\r\n                states: {},\r\n                idToName: {}\r\n            }\r\n        },\r\n        methods: {\r\n            onReplyStateChange(id) {\r\n                const comments = this.$store.getters[\"comment/getCommentsByPath\"];\r\n                if (id !== 'init') {\r\n                    const state = this.states[id]; // 取出当前回复的状态\r\n\r\n                    this.initCommentId(comments) // 初始化所以评论下的状态为false\r\n                    this.$set(this.states, id, !state)\r\n                    this.isReplyState = Object.keys(this.states).every(k => this.states[k] === false);\r\n                } else {\r\n                    this.isReplyState = true;\r\n                    this.initCommentId(comments)\r\n                }\r\n            },\r\n            initCommentId(comments) {\r\n                if (comments === null || comments.length === 0) return;\r\n                comments.forEach(item => {\r\n                    if (item.sub.length > 0) {\r\n                        this.initCommentId(item.sub);\r\n                    }\r\n                    this.idToName[item._id] = item.name;\r\n                    item._id && this.$set(this.states, item._id, false)\r\n                })\r\n            },\r\n            countCommentNum(comments) {\r\n                if (comments === null || comments.length === 0) return;\r\n                let n = 0;\r\n                comments.forEach(item => {\r\n                    item.sub.length > 0 && (n += item.sub.length)\r\n                    n++;\r\n                })\r\n                return n;\r\n            }\r\n        },\r\n        computed: {\r\n            title() {\r\n                const comments = this.$store.getters[\"comment/getCommentsByPath\"];\r\n                let n = this.countCommentNum(comments) || 0;\r\n                let title = '';\r\n                if (comments.length === 0) {\r\n                    if (this.$route.path !== '/message') {\r\n                        title = '暂无评论'\r\n                    } else {\r\n                        title = '暂无留言'\r\n                    }\r\n                } else {\r\n                    title = '共' + n + '条评论';\r\n                    if (this.$route.path === '/message') title = '共' + n + '条留言';\r\n                }\r\n                return title\r\n            }\r\n        },\r\n        mounted() {\r\n            setTimeout(() => {\r\n                this.initCommentId(this.$store.getters[\"comment/getCommentsByPath\"])\r\n            }, 200)\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n    .h-comment-wrapper {\r\n        display: flex;\r\n    }\r\n\r\n    .comment-title {\r\n        width: 80%;\r\n        margin: 0 auto;\r\n        font-size: 1.8em;\r\n        font-weight: bolder;\r\n        letter-spacing: 5px;\r\n        color: #34495E;\r\n        transition: .7s;\r\n        padding: 10px 15px;\r\n        border-radius: 5px;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .comment-title:active {\r\n        transform: rotateX(360deg);\r\n        text-align: right;\r\n        background-color: #409eff;\r\n    }\r\n\r\n</style>"]}]}